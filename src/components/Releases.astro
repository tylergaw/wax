---
import type { Release } from "@types";
import { getHumanColor, getMachineColor, getReleaseUrl } from "@util/data";

const { releases } = Astro.props;
---

<ul>
  {
    releases.map((release: Release) => {
      const {
        basic_information: { title, artists },
      } = release;

      return (
        <li>
          <a href={getReleaseUrl(release)}>
            <div>
              {/*FIXME<img
              src={release.basic_information.cover_image}
              alt=""
              width="350px"
              height="350px"
              loading="lazy"
            />*/}
            </div>
            <div class="info">
              <small>{release.id}</small>
              <h3 class="title">{title}</h3>
              <p class="artist">{artists[0].name}</p>

              <p>
                <small>Human color: {getHumanColor(release)}</small>
                <br />
                <small>Machine color: {getMachineColor(release)}</small>
              </p>
              <div
                class="swatch"
                style={`--bg-color: ${getMachineColor(release)}`}
              />
            </div>
          </a>
        </li>
      );
    })
  }
</ul>

<style>
  ul {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    gap: 1rem;
    margin: 0;
    padding: 0 1rem;
  }

  li {
    display: grid;
    flex: 1;
  }

  a {
    border: 1px solid;
    color: black;
    display: grid;
    gap: 1rem;
    grid-template: "container";
    text-decoration: none;
    min-height: 300px;
    min-width: 300px;
  }

  a > * {
    grid-area: container;
  }

  img {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }

  .info {
    /* FIXME */
    /* display: flex;
    flex-direction: column;
    justify-content: space-between; */
    padding: 0.4rem;
    /* opacity: 0; */
    z-index: 2;
  }

  .title,
  .artist {
    font-size: 1.2rem;
    font-weight: normal;
    margin: 0;
  }

  .swatch {
    background-color: var(--bg-color, black);
    box-shadow: 0 0 1px rgba(0, 0, 0, 0.3);
    height: 100px;
  }

  /* FIXME: a:hover img,
  a:focus img {
    transform: scale(0.82);
  }

  a:hover .info,
  a:focus .info {
    opacity: 1;
  } */
</style>
